#ifndef CAMERA_H
#define CAMERA_H

// #include <imxrt.h>

// void enable_csi() {
//     // enable csi_clk_enable
//     // i think this is on by default, but just to be safe...
//     CCM_CCGR2 |= 0x6U;

//     // setup CSI[9:2] select daisy registers
//     IOMUXC_CSI_DATA02_SELECT_INPUT &= ~0x1U; // AD_B1_15
//     IOMUXC_CSI_DATA03_SELECT_INPUT &= ~0x1U; // AD_B1_14
//     IOMUXC_CSI_DATA04_SELECT_INPUT &= ~0x1U; // AD_B1_13
//     IOMUXC_CSI_DATA05_SELECT_INPUT &= ~0x1U; // AD_B1_12
//     IOMUXC_CSI_DATA06_SELECT_INPUT &= ~0x1U; // AD_B1_11
//     IOMUXC_CSI_DATA07_SELECT_INPUT &= ~0x1U; // AD_B1_10
//     IOMUXC_CSI_DATA08_SELECT_INPUT &= ~0x1U; // AD_B1_09
//     IOMUXC_CSI_DATA09_SELECT_INPUT &= ~0x1U; // AD_B1_08

//     // Set all SW_MUX_CTL_PAD_X to SION enable and ALT4 (CSI)
//     IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_15 = (IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_15 & ~0x1FU) | 0x14U;
//     IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_14 = (IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_14 & ~0x1FU) | 0x14U;
//     IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_13 = (IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_13 & ~0x1FU) | 0x14U;
//     IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_12 = (IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_12 & ~0x1FU) | 0x14U;
//     IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_11 = (IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_11 & ~0x1FU) | 0x14U;
//     IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_10 = (IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_10 & ~0x1FU) | 0x14U;
//     IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_09 = (IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_09 & ~0x1FU) | 0x14U;
//     IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_08 = (IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_08 & ~0x1FU) | 0x14U;

//     // set all SW_PAD_CTL_PAD_X to defaults
//     IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_15 = (IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_15 & ~0x1F8F9U) | 0x010B0U;
//     IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_14 = (IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_14 & ~0x1F8F9U) | 0x010B0U;
//     IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_13 = (IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_13 & ~0x1F8F9U) | 0x010B0U;
//     IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_12 = (IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_12 & ~0x1F8F9U) | 0x010B0U;
//     IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_11 = (IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_11 & ~0x1F8F9U) | 0x010B0U;
//     IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_10 = (IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_10 & ~0x1F8F9U) | 0x010B0U;
//     IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_09 = (IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_09 & ~0x1F8F9U) | 0x010B0U;
//     IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_08 = (IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_08 & ~0x1F8F9U) | 0x010B0U;

//     // disable csi, CSI_CR18[CSI_ENABLE]=0
//     CSI_CSICR18 &= ~(0x1U << 31);

//     // Reflash the DMA controller for RFIFO, CSI_CR3[DMA_REFLASH_RFF]=1
//     CSI_CSICR3 |= (0x1U << 14);
//     // wait for reflash to complete
//     while (CSI_CSICR3 & (0x1U << 14)) { }

//     // TODO: config all regs

//     // enable csi, CSI_CR18[CSI_ENABLE]=1
//     CSI_CSICR18 |= (0x1U << 31);
// }

#endif