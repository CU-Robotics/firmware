name: Test Documentation

# Controls when the action will run. 
on:
  pull_request:
    types:
      - opened
      - edited
      - reopened
      - review_requested
    
jobs:
  build-documentation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run Doxygen
        uses: mattnotmitt/doxygen-action@v1.9.5
        with:
          # These are default values, but included for clarity
          doxyfile-path: ./Doxyfile
          working-directory: .
          # Non-default:
          enable-latex: false

      - name: Identify Filename
        if: success() || failure()
        run: |
          echo "ls root"
          ls -a
          echo "ls docs"
          ls docs/ -a
          echo "cat the file:"
          cat docs/doxygen_warnings.txt

      # Comment warnings onto pull request for easy viewing and feedback.

      # Actions modified from https://github.com/peter-evans/create-or-update-comment
      - name: Find Comment
        if: success() || failure() # Run commenting steps even if above steps fails
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Doxygen warnings output

      # Get file contents as GITHUB_OUTPUT to be used in comment body. Can't simply use body-path since I want to support editing the existing comment.
      - name: Get File Contents
        if: success() || failure() # Run commenting steps even if above steps fails
        id: doxygen-warnings
        # run inspired from https://stackoverflow.com/questions/74137120/how-to-fix-or-avoid-error-unable-to-process-file-command-output-successfully
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "text<<$EOF" >> $GITHUB_OUTPUT
          echo "warnings=5" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT

      # test output
      - name: Test Output
        if: success() || failure()
        run: echo ${{ steps.doxygen-warnings.outputs.warnings }}

      # Create or update/edit comment containing build warnings
      - name: Create or update comment
        if: success() || failure() # Run commenting steps even if above steps fails
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Doxygen warnings output
            ```
              ${{ steps.doxygen-warnings.outputs.warnings }}
            ```
          edit-mode: replace